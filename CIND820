import pandas as pd
import warnings
pd.set_option('display.max_columns',25)
warnings.filterwarnings('ignore')

data = pd.read_excel('C:\\Users\\trans\\Desktop\\CIND820 _Project\\default_of_credit_card_clients.xls')
data.info()
data.describe(include='all').T
data.rename(columns={'PAY_0':'PAY_1','default payment next month':'def_pay'},inplace=True)



import matplotlib.pyplot as plt
import seaborn as sns

plt.figure(figsize=(6,4))

ax = sns.countplot(x='def_pay', data=data, palette="rocket")

plt.xlabel('Default?', fontsize= 12)
plt.ylabel("# of Clients", fontsize= 12)
plt.ylim(0,30000)
plt.xticks([0,1], ['No', 'Yes'], fontsize = 11)

for p in ax.patches:
    ax.annotate((p.get_height()), (p.get_x()+0.32, p.get_height()+1000))
    
plt.show()




plt.figure(figsize=(7,5))

data['def_pay'].value_counts().plot(kind='pie',labels = ['',''], autopct='%1.1f%%', colors = ['indigo','salmon'], explode = [0,0.05], textprops = {"fontsize":15})

plt.legend(labels=['No Default', 'Default'])
plt.show()




plt.figure(figsize=(12,4))

ax = sns.countplot(data=data, x = 'SEX', hue="def_pay", palette = 'rocket')

plt.xlabel("Sex", fontsize= 12)
plt.ylabel("# of Clients", fontsize= 12)
plt.ylim(0,20000)
plt.xticks([0,1],['Male', 'Female'], fontsize = 11)

for p in ax.patches:
    ax.annotate((p.get_height()), (p.get_x()+0.16, p.get_height()+1000))

plt.show()




plt.figure(figsize=(10,4))

ax = sns.barplot(x = "SEX", y = "def_pay", data=data, palette = 'rocket', ci = None)

plt.ylabel("% of Default", fontsize= 12)
plt.ylim(0,0.5)
plt.xticks([0,1],['Male', 'Female'], fontsize = 12)

for p in ax.patches:
    ax.annotate("%.2f" %(p.get_height()), (p.get_x()+0.35, p.get_height()+0.03),fontsize=13)

plt.show()




data.loc[:,'EDUCATION'] = data.loc[:,'EDUCATION'].replace(0,5)
data.loc[:,'EDUCATION'] = data.loc[:,'EDUCATION'].replace(6,5)
plt.figure(figsize=(12,4))

plt.figure(figsize=(12,4))

ax = sns.barplot(x = "EDUCATION", y = "def_pay", data = data, palette = 'rocket', ci = None)

plt.ylabel("% of Default", fontsize= 12)
plt.ylim(0,0.5)
plt.xticks([0,1,2,3,4],['Grad School','University','High School','Others','Unknown'], fontsize = 11)

for p in ax.patches:
    ax.annotate("%.2f" %(p.get_height()), (p.get_x()+0.30, p.get_height()+0.03),fontsize=13)

plt.show()



plt.figure(figsize=(12,4))

ax = sns.barplot(x = "MARRIAGE", y = "def_pay", data = data, palette = 'rocket', ci = None)

plt.ylabel("% of Default", fontsize= 12)
plt.ylim(0,0.5)
plt.xticks([0,1,2,3],['Unknown', 'Married', 'Single', 'Divorce'], fontsize = 11)

for p in ax.patches:
    ax.annotate("%.2f" %(p.get_height()), (p.get_x()+0.30, p.get_height()+0.03),fontsize=13)

plt.show()



plt.figure(figsize=(15,12))

pay_x_fts = ['PAY_1', 'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5', 'PAY_6']
for i,col in enumerate(pay_x_fts):    
    plt.subplot(3,2,i + 1)
    ax = sns.barplot(x = col, y = "def_pay", data = data, palette = 'rocket', ci = None)
    plt.ylabel("% of Default", fontsize= 12)
    plt.ylim(0,1.2)
    plt.tight_layout()
    
    for p in ax.patches:
        ax.annotate("%.2f" %(p.get_height()), (p.get_x()+0.09, p.get_height()+0.03),fontsize=13)

plt.show()



